CREATE TABLE PUBLISHER
(NAME VARCHAR2 (20),
PHONE INTEGER,
ADDRESS VARCHAR2 (20),
CONSTRAINT PKP PRIMARY KEY(NAME));
CREATE TABLE BOOK
(BOOK_ID VARCHAR(8),
TITLE VARCHAR2 (20),
PUBLISHER_NAME VARCHAR(20),
PUB_YEAR INTEGER,
CONSTRAINT PKB PRIMARY KEY(BOOK_ID),
CONSTRAINT FKB FOREIGN KEY(PUBLISHER_NAME) REFERENCES 
PUBLISHER(NAME));
CREATE TABLE BOOK_AUTHORS
(BOOK_ID VARCHAR(8),
AUTHOR_NAME VARCHAR2 (20),
CONSTRAINT PKBA PRIMARY KEY (BOOK_ID,AUTHOR_NAME),
CONSTRAINT FKBA FOREIGN KEY(BOOK_ID) REFERENCES BOOK(BOOK_ID)ON 
DELETE CASCADE);
CREATE TABLE LIBRARY_BRANCH
(BRANCH_ID VARCHAR(6),
BRANCH_NAME VARCHAR2 (20),
ADDRESS VARCHAR2 (20),
CONSTRAINT PKLB PRIMARY KEY(BRANCH_ID));
CREATE TABLE BOOK_COPIES
(BOOK_ID VARCHAR(8),
BRANCH_ID VARCHAR2(6),
NO_OF_COPIES INTEGER,
CONSTRAINT PKBC PRIMARY KEY(BOOK_ID, BRANCH_ID),
CONSTRAINT FKBC FOREIGN KEY(BOOK_ID) REFERENCES BOOK(BOOK_ID)ON 
DELETE CASCADE,
CONSTRAINT FKBB FOREIGN KEY(BRANCH_ID) REFERENCES 
LIBRARY_BRANCH(BRANCH_ID));
CREATE TABLE BOOK_LENDING
(BOOK_ID VARCHAR(8),
BRANCH_ID VARCHAR2(6),
CARD_NO INTEGER,
DATE_OUT DATE,
DUE_DATE DATE,
CONSTRAINT PKBL PRIMARY KEY(BOOK_ID, BRANCH_ID,CARD_NO),
CONSTRAINT FKBL FOREIGN KEY(BOOK_ID) REFERENCES BOOK(BOOK_ID)ON 
DELETE CASCADE);

INSERT INTO PUBLISHER VALUES ('MCGRAW-HILL', 9989076587, 'BANGALORE');

INSERT INTO BOOK VALUES ('1','DBMS', 'MCGRAW-HILL',2017);

INSERT INTO BOOK_AUTHORS VALUES ('1','NAVATHE');

INSERT INTO LIBRARY_BRANCH VALUES ('10','VV PURAM','BANGALORE');

INSERT INTO BOOK_COPIES VALUES ( '1','10', 10);

INSERT INTO BOOK_LENDING VALUES ('1', '10', 101,'01-JAN-17','01-JUN-17');

SELECT B.BOOK_ID, B.TITLE, B.PUBLISHER_NAME, A.AUTHOR_NAME,
C.NO_OF_COPIES, L.BRANCH_ID
FROM BOOK B, BOOK_AUTHORS A, BOOK_COPIES C, LIBRARY_BRANCH L
WHERE B.BOOK_ID=A.BOOK_ID
AND B.BOOK_ID=C.BOOK_ID
AND L.BRANCH_ID=C.BRANCH_ID;

 SELECT CARD_NO
 FROM BOOK_LENDING
 WHERE DATE_OUT BETWEEN '01-JAN-2017' AND '01-JUL-2017'
 GROUP BY CARD_NO
 HAVING COUNT (*)>3;

DELETE FROM BOOK WHERE BOOK_ID='3';

CREATE TABLE BOOKPART
PARTITION BY RANGE (PUB_YEAR)
(PARTITION P1 VALUES LESS THAN(2016),
PARTITION P2 VALUES LESS THAN (MAXVALUE))
AS SELECT * FROM BOOK;

CREATE VIEW BC AS SELECT B.BOOK_ID,C.TITLE,B.BRANCH_ID,
(B.NO_OF_COPIES-(SELECT COUNT(*) FROM BOOK_LENDING WHERE 
B.BOOK_ID=BOOK_ID AND B.BRANCH_ID=BRANCH_ID)) AS NO_COPY 
FROM BOOK_COPIES B,BOOK C
WHERE B.BOOK_ID=C.BOOK_ID;







CREATE TABLE SALESMAN(SALESMAN_ID VARCHAR(8),
 NAME VARCHAR(20),
 CITY VARCHAR(20),
 COMMISSION VARCHAR2(10),
 CONSTRAINT PKS PRIMARY KEY(SALESMAN_ID));
CREATE TABLE CUSTOMER(CUSTOMER_ID VARCHAR(8),
CUST_NAME VARCHAR2 (20),
CITY VARCHAR2 (20),
GRADE NUMBER (3),
SALESMAN_ID VARCHAR(8),
CONSTRAINT PKC PRIMARY KEY(CUSTOMER_ID),
CONSTRAINT FKC FOREIGN KEY(SALESMAN_ID) REFERENCES 
SALESMAN(SALESMAN_ID) ON DELETE SET NULL);
CREATE TABLE ORDERS (ORD_NO VARCHAR(8),
 PURCHASE_AMT NUMBER(10, 2),
 ORD_DATE DATE,
 CUSTOMER_ID VARCHAR(8),
 SALESMAN_ID VARCHAR(8),
 CONSTRAINT PKO PRIMARY KEY (ORD_NO),
 CONSTRAINT FKOC FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER 
(CUSTOMER_ID) ON DELETE CASCADE,
 CONSTRAINT FKOS FOREIGN KEY (SALESMAN_ID) REFERENCES SALESMAN 
(SALESMAN_ID) ON DELETE CASCADE);

INSERT INTO SALESMAN VALUES ('1000', 'JOHN','BANGALORE','25%');

INSERT INTO CUSTOMER VALUES ('C1', 'PREETHI','BANGALORE', 100, '1000');

INSERT INTO ORDERS VALUES ('O1', 5000, '04-MAY-17', 'C1', '1000');

SELECT GRADE, COUNT (DISTINCT CUSTOMER_ID) AS NO_OF_CUSTOMER
FROM CUSTOMER
GROUP BY GRADE
HAVING GRADE > (SELECT AVG(GRADE)
 FROM CUSTOMER
 WHERE CITY='BANGALORE');

SELECT SALESMAN_ID, NAME
 FROM SALESMAN S
 WHERE ((SELECT COUNT (*)
 FROM CUSTOMER
 WHERE SALESMAN_ID=S.SALESMAN_ID)>1);
 
 SELECT S.SALESMAN_ID, S.CITY
FROM SALESMAN S
WHERE EXISTS (SELECT CITY FROM CUSTOMER WHERE S.CITY=CITY AND
S.SALESMAN_ID=SALESMAN_ID)
 UNION
SELECT SALESMAN_ID,'NO MATCH OF CITIES'
FROM SALESMAN S
WHERE NOT EXISTS (SELECT CITY FROM CUSTOMER WHERE S.CITY=CITY 
AND S.SALESMAN_ID=SALESMAN_ID);

SELECT DISTINCT S.SALESMAN_ID,S.ORD_DATE FROM ORDERS S
WHERE (SELECT SUM(PURCHASE_AMT) FROM ORDERS WHERE 
SALESMAN_ID=S.SALESMAN_ID AND ORD_DATE=S.ORD_DATE AND 
S.CUSTOMER_ID=CUSTOMER_ID)
=(SELECT MAX(SUM(PURCHASE_AMT)) 
FROM ORDERS S1 WHERE S1.ORD_DATE=S.ORD_DATE GROUP BY 
S1.ORD_DATE,S1.SALESMAN_ID,S1.CUSTOMER_ID);

DELETE FROM SALESMAN
 WHERE SALESMAN_ID=1000;

SQL> SELECT * FROM SALESMAN;
SQL> SELECT * FROM CUSTOMER;
SQL> SELECT * FROM ORDERS;







CREATE TABLE ACTOR (ACT_ID NUMBER (3),
ACT_NAME VARCHAR (20),
ACT_GENDER CHAR (1),
CONSTRAINT PKAC PRIMARY KEY(ACT_ID));
CREATE TABLE DIRECTOR(
DIR_ID NUMBER (3),
DIR_NAME VARCHAR (20),
DIR_PHONE NUMBER (10),
CONSTRAINT PKDI PRIMARY KEY(DIR_ID));
CREATE TABLE MOVIES (
MOV_ID NUMBER (4),
MOV_TITLE VARCHAR (25),
MOV_YEAR NUMBER (4),
MOV_LANG VARCHAR (12),
DIR_ID NUMBER (3),
CONSTRAINT PKMV PRIMARY KEY(MOV_ID),
CONSTRAINT FKMV FOREIGN KEY(DIR_ID) REFERENCES DIRECTOR(DIR_ID));
CREATE TABLE MOVIE_CAST (
ACT_ID NUMBER (3),
MOV_ID NUMBER (4),
ROLE VARCHAR (10),
CONSTRAINT PKMC PRIMARY KEY(ACT_ID, MOV_ID),
CONSTRAINT FKMC FOREIGN KEY(ACT_ID) REFERENCES ACTOR(ACT_ID),
CONSTRAINT FKMCC FOREIGN KEY(MOV_ID) REFERENCES MOVIES(MOV_ID));
CREATE TABLE RATING (
MOV_ID NUMBER (4),
REV_STARS INTEGER,
CONSTRAINT FKRA FOREIGN KEY(MOV_ID) REFERENCES MOVIES(MOV_ID));

INSERT INTO ACTOR VALUES (301,'ANUSHKA','F');

INSERT INTO DIRECTOR VALUES (60,'RAJAMOULI', 8751611001);

INSERT INTO MOVIES VALUES (1001,'BAHUBALI-2', 2017, 'TELAGU', 60);

NSERT INTO MOVIE_CAST VALUES (301, 1002, 'HEROINE');

INSERT INTO RATING VALUES (1001, 4);

SELECT M.MOV_TITLE
 FROM MOVIES M,DIRECTOR D
 WHERE M.DIR_ID=D.DIR_ID AND D.DIR_NAME = 'HITCHCOCK';
 
 SELECT MOV_TITLE
 FROM MOVIES M, MOVIE_CAST MV
 WHERE M.MOV_ID=MV.MOV_ID AND ACT_ID IN (SELECT ACT_ID
 FROM MOVIE_CAST GROUP BY ACT_ID
 HAVING COUNT (ACT_ID)>=1)
 GROUP BY MOV_TITLE HAVING COUNT (*)>1;

SELECT A.ACT_NAME
FROM ACTOR A
JOIN MOVIE_CAST C
 ON A.ACT_ID=C.ACT_ID
JOIN MOVIES M
 ON C.MOV_ID=M.MOV_ID
WHERE M.MOV_YEAR NOT BETWEEN 2000 AND 2015;

SELECT MOV_TITLE, MAX(REV_STARS)
FROM MOVIES
INNER JOIN RATING USING (MOV_ID)
GROUP BY MOV_TITLE
HAVING MAX (REV_STARS)>0
ORDER BY MOV_TITLE;

UPDATE RATING
SET REV_STARS=5
WHERE MOV_ID IN (SELECT M.MOV_ID FROM MOVIES M,DIRECTOR D
 WHERE M.DIR_ID=D.DIR_ID AND 
 D.DIR_NAME = 'STEVEN SPIELBERG');
 
 
 
 
 
 
 
 CREATE TABLE STUDENT (USN VARCHAR (10),
 SNAME VARCHAR (20),
 ADDRESS VARCHAR (20),
 PHONE NUMBER (10),
 GENDER CHAR (1),
 CONSTRAINT PKST PRIMARY KEY(USN)); 
CREATE TABLE SEMSEC (SSID VARCHAR (5),
 SEM NUMBER (2),
 SEC CHAR (1),
CONSTRAINT PKSEM PRIMARY KEY(SSID));
CREATE TABLE CLASS (USN VARCHAR (10),
 SSID VARCHAR (5),
CONSTRAINT PKCL PRIMARY KEY (USN, SSID),
CONSTRAINT FKUSN FOREIGN KEY (USN) REFERENCES STUDENT (USN),
CONSTRAINT FKSSID FOREIGN KEY (SSID) REFERENCES SEMSEC (SSID));
CREATE TABLE SUBJECT (SUBCODE VARCHAR (8),
 TITLE VARCHAR (20),
 SEM NUMBER (2),
 CREDITS NUMBER (5),
CONSTRAINT PKSUB PRIMARY KEY (SUBCODE));
CREATE TABLE IAMARKS (USN VARCHAR (10),
 SUBCODE VARCHAR (8),
 SSID VARCHAR (5),
 TEST1 NUMBER,
 TEST2 NUMBER,
 TEST3 NUMBER,
 FINALIA NUMBER,
CONSTRAINT PKIA PRIMARY KEY (USN, SUBCODE, SSID),
CONSTRAINT FKUS FOREIGN KEY (USN) REFERENCES STUDENT (USN),
CONSTRAINT FKSU FOREIGN KEY (SUBCODE) REFERENCES SUBJECT 
(SUBCODE),
CONSTRAINT FKSSI FOREIGN KEY (SSID) REFERENCES SEMSEC (SSID));

INSERT INTO STUDENT VALUES
('1BI16CS001','ABHILASH','BELAGAVI',8877881122,'M');

INSERT INTO SEMSEC VALUES ('CSE4A', 4,'A');

INSERT INTO CLASS VALUES ('1BI16CS001','CSE4A');

INSERT INTO SUBJECT VALUES ('10CS81','SA', 8, 4);

INSERT INTO IAMARKS (USN, SUBCODE, SSID, TEST1, TEST2, TEST3) VALUES 
('1BI15CS101','10CS61','CSE6B', 20, 23, 20);

SELECT S.*, SS.SEM, SS.SEC
 FROM STUDENT S, SEMSEC SS, CLASS C
 WHERE S.USN = C.USN AND
 SS.SSID = C.SSID AND
 SS.SEM = 4 AND
 SS.SEC='C';

SELECT SS.SEM, SS.SEC, S.GENDER, COUNT (S.GENDER) AS COUNT
FROM STUDENT S, SEMSEC SS, CLASS C
WHERE S.USN = C.USN AND
SS.SSID = C.SSID
GROUP BY SS.SEM, SS.SEC, S.GENDER
ORDER BY SEM;

CREATE VIEW STU_TEST1_MARKS_VIEW
 AS
 SELECT TEST1, SUBCODE
 FROM IAMARKS
 WHERE USN = '1BI15CS101';

UPDATE IAMARKS SET FINALIA=((TEST1+TEST2+TEST3)-
LEAST(TEST1,TEST2,TEST3))/2;

SQL> SELECT * FROM IAMARKS;

SELECT S.USN,S.SNAME,S.ADDRESS,S.PHONE,S.GENDER,IA.SUBCODE,
 (CASE
 WHEN IA.FINALIA BETWEEN 17 AND 20 THEN 'OUTSTANDING'
 WHEN IA.FINALIA BETWEEN 12 AND 16 THEN 'AVERAGE'
 ELSE 'WEAK'
 END) AS CAT
 FROM STUDENT S, SEMSEC SS, IAMARKS IA, SUBJECT SUB
 WHERE S.USN = IA.USN AND
 SS.SSID = IA.SSID AND
 SUB.SUBCODE = IA.SUBCODE AND
 SUB.SEM = 8;








CREATE TABLE EMPLOYEE(SSN VARCHAR(8),
 Name VARCHAR(10),
Address VARCHAR(30),
Sex CHAR(2),
Salary NUMBER(10),SuperSSN VARCHAR(8),DNo VARCHAR(6),
CONSTRAINT PK_SSN PRIMARY KEY(SSN));
CREATE TABLE DEPARTMENT(DNo VARCHAR(6),
 DName VARCHAR(10),
 MgrSSN VARCHAR(8),
 MgrStartDate DATE,
CONSTRAINT PK_DNo PRIMARY KEY(DNo),
CONSTRAINT FK_MgrSSN FOREIGN KEY(MgrSSN) REFERENCES 
EMPLOYEE(SSN)); 
CREATE TABLE DLOCATION(DNo VARCHAR(6),
 DLoc VARCHAR(15),
CONSTRAINT PK_DNo_DLoc PRIMARY KEY(DNo,DLoc),
CONSTRAINT FK_DNo FOREIGN KEY(DNo) REFERENCES DEPARTMENT(DNo));
CREATE TABLE PROJECT(PNo VARCHAR(5),
 PName VARCHAR(10), 
 PLocation VARCHAR(14), 
 DNo VARCHAr(6),
CONSTRAINT PK_PNo PRIMARY KEY(PNo),
CONSTRAINT FK_PDNo FOREIGN KEY(DNo) REFERENCES DEPARTMENT(DNo));
CREATE TABLE WORKS_ON(SSN VARCHAR(8),
 PNo VARCHAR(5), 
 Hours NUMBER(5),
CONSTRAINT PK_PNo_SSN PRIMARY KEY(PNo,SSN),
CONSTRAINT FK_WSSN FOREIGN KEY(SSN) REFERENCES EMPLOYEE(SSN),
CONSTRAINT FK_PNo FOREIGN KEY(PNo) REFERENCES PROJECT(PNo));
ALTER TABLE EMPLOYEE ADD CONSTRAINT FK_SSN FOREIGN KEY(SuperSSN) 
REFERENCES EMPLOYEE(SSN);
ALTER TABLE EMPLOYEE ADD CONSTRAINT FK_EDNo FOREIGN KEY(DNo) 
REFERENCES DEPARTMENT(DNo);

INSERT INTO EMPLOYEE(SSN, Name, Address, Sex, Salary)VALUES('100','John','VV 
Puram,Bangalore','M',660000);

INSERT INTO DEPARTMENT VALUES('D1','Accounts','200','11-Feb-2015');

INSERT INTO DLOCATION VALUES('D1','Bangalore');

INSERT INTO PROJECT VALUES('P1','Billing','Bangalore','D1');

INSERT INTO WORKS_ON VALUES('100','P1',8);

UPDATE EMPLOYEE SET SuperSSN='200' where SSN='100';
UPDATE EMPLOYEE SET SuperSSN='200' where SSN='300';
UPDATE EMPLOYEE SET SuperSSN='200' where SSN='400';
UPDATE EMPLOYEE SET SuperSSN='300' where SSN='200';
UPDATE EMPLOYEE SET SuperSSN='300' where SSN='500';
UPDATE EMPLOYEE SET SuperSSN='200' where SSN='600';
UPDATE EMPLOYEE SET SuperSSN='200' where SSN='700';
UPDATE EMPLOYEE SET SuperSSN='200' where SSN='800';
UPDATE EMPLOYEE SET SuperSSN='200' where SSN='900';
UPDATE EMPLOYEE SET SuperSSN='200' where SSN='1000';

UPDATE EMPLOYEE SET DNo='D1' where SSN='100';
UPDATE EMPLOYEE SET DNo='D2' where SSN='200';
UPDATE EMPLOYEE SET DNo='D3' where SSN='300';
UPDATE EMPLOYEE SET DNo='D4' where SSN='400';
UPDATE EMPLOYEE SET DNo='D2' where SSN='500';
UPDATE EMPLOYEE SET DNo='D1' where SSN='600';
UPDATE EMPLOYEE SET DNo='D1' where SSN='700';
UPDATE EMPLOYEE SET DNo='D1' where SSN='800';
UPDATE EMPLOYEE SET DNo='D1' where SSN='900';
UPDATE EMPLOYEE SET DNo='D1' where SSN='1000';

SELECT DISTINCT PNo
 FROM PROJECT 
 WHERE PNo IN(
 (SELECT P.PNo 
 FROM PROJECT P,DEPARTMENT D ,EMPLOYEE E
 WHERE P.DNo=D.DNo AND D.MgrSSN=E.SSN AND E.Name='Scott')
 UNION
 (SELECT W.PNo 
 FROM WORKS_ON W, EMPLOYEE E
 WHERE E.SSN=W.SSN AND E.Name='Scott'));

SELECT E.Name,1.1* E.Salary AS Increased_salary 
FROM EMPLOYEE E, WORKS_ON W, PROJECT P 
WHERE E.SSN=W.SSN AND W.PNo=P.PNo AND P.PName='IoT';

SELECT SUM (E. Salary) AS TOTAL_SALARY,MAX(E. Salary) AS 
 MAX_SALARY,MIN(E. Salary) AS MIN_SALARY,AVG(E. Salary) AS
 AVG_SALARY 
 FROM EMPLOYEE E, DEPARTMENT D
 WHERE E. DNo= D. DNo AND D.DName='Accounts';
 
 SELECT E.Name 
FROM EMPLOYEE E
WHERE NOT EXISTS((SELECT PNo FROM PROJECT WHERE DNo='D5')
MINUS (SELECT W.PNo FROM WORKS_ON W WHERE E.SSN=W.SSN));

SELECT D.DNo,COUNT(*)
FROM EMPLOYEE E, DEPARTMENT D
WHERE E.DNo= D.DNo AND E.Salary>600000
GROUP BY D.DNo
HAVING COUNT(*)>=5;
